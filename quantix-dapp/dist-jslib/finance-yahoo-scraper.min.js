var d$1=Object.defineProperty;var e=(c,a)=>{for(var b in a)d$1(c,b,{get:a[b],enumerable:!0});};

var w={};e(w,{convertFileSrc:()=>u$2,invoke:()=>d,transformCallback:()=>s$2});function l(){return window.crypto.getRandomValues(new Uint32Array(1))[0]}function s$2(r,n=!1){let e=l(),t=`_${e}`;return Object.defineProperty(window,t,{value:o=>(n&&Reflect.deleteProperty(window,t),r?.(o)),writable:!1,configurable:!0}),e}async function d(r,n={}){return new Promise((e,t)=>{let o=s$2(i=>{e(i),Reflect.deleteProperty(window,`_${a}`);},!0),a=s$2(i=>{t(i),Reflect.deleteProperty(window,`_${o}`);},!0);window.__TAURI_IPC__({cmd:r,callback:o,error:a,...n});})}function u$2(r,n="asset"){let e=encodeURIComponent(r);return navigator.userAgent.includes("Windows")?`https://${n}.localhost/${e}`:`${n}://localhost/${e}`}

async function a$1(i){return d("tauri",i)}

var W$1={};e(W$1,{TauriEvent:()=>c$1,emit:()=>D$1,listen:()=>E$1,once:()=>_});async function s$1(n,t){return a$1({__tauriModule:"Event",message:{cmd:"unlisten",event:n,eventId:t}})}async function m$1(n,t,r){await a$1({__tauriModule:"Event",message:{cmd:"emit",event:n,windowLabel:t,payload:r}});}async function a(n,t,r){return a$1({__tauriModule:"Event",message:{cmd:"listen",event:n,windowLabel:t,handler:s$2(r)}}).then(i=>async()=>s$1(n,i))}async function u$1(n,t,r){return a(n,t,i=>{r(i),s$1(n,i.id).catch(()=>{});})}var c$1=(e=>(e.WINDOW_RESIZED="tauri://resize",e.WINDOW_MOVED="tauri://move",e.WINDOW_CLOSE_REQUESTED="tauri://close-requested",e.WINDOW_CREATED="tauri://window-created",e.WINDOW_DESTROYED="tauri://destroyed",e.WINDOW_FOCUS="tauri://focus",e.WINDOW_BLUR="tauri://blur",e.WINDOW_SCALE_FACTOR_CHANGED="tauri://scale-change",e.WINDOW_THEME_CHANGED="tauri://theme-changed",e.WINDOW_FILE_DROP="tauri://file-drop",e.WINDOW_FILE_DROP_HOVER="tauri://file-drop-hover",e.WINDOW_FILE_DROP_CANCELLED="tauri://file-drop-cancelled",e.MENU="tauri://menu",e.CHECK_UPDATE="tauri://update",e.UPDATE_AVAILABLE="tauri://update-available",e.INSTALL_UPDATE="tauri://update-install",e.STATUS_UPDATE="tauri://update-status",e.DOWNLOAD_PROGRESS="tauri://update-download-progress",e))(c$1||{});async function E$1(n,t){return a(n,null,t)}async function _(n,t){return u$1(n,null,t)}async function D$1(n,t){return m$1(n,void 0,t)}

var S={};e(S,{CloseRequestedEvent:()=>y,LogicalPosition:()=>c,LogicalSize:()=>m,PhysicalPosition:()=>r,PhysicalSize:()=>o,UserAttentionType:()=>W,WebviewWindow:()=>s,WebviewWindowHandle:()=>u,WindowManager:()=>b,appWindow:()=>g,availableMonitors:()=>D,currentMonitor:()=>C,getAll:()=>h,getCurrent:()=>E,primaryMonitor:()=>T});var m=class{constructor(e,a){this.type="Logical";this.width=e,this.height=a;}},o=class{constructor(e,a){this.type="Physical";this.width=e,this.height=a;}toLogical(e){return new m(this.width/e,this.height/e)}},c=class{constructor(e,a){this.type="Logical";this.x=e,this.y=a;}},r=class{constructor(e,a){this.type="Physical";this.x=e,this.y=a;}toLogical(e){return new c(this.x/e,this.y/e)}},W=(a=>(a[a.Critical=1]="Critical",a[a.Informational=2]="Informational",a))(W||{});function E(){return new s(window.__TAURI_METADATA__.__currentWindow.label,{skip:!0})}function h(){return window.__TAURI_METADATA__.__windows.map(t=>new s(t.label,{skip:!0}))}var M=["tauri://created","tauri://error"],u=class{constructor(e){this.label=e,this.listeners=Object.create(null);}async listen(e,a$1){return this._handleTauriEvent(e,a$1)?Promise.resolve(()=>{let n=this.listeners[e];n.splice(n.indexOf(a$1),1);}):a(e,this.label,a$1)}async once(e,a){return this._handleTauriEvent(e,a)?Promise.resolve(()=>{let n=this.listeners[e];n.splice(n.indexOf(a),1);}):u$1(e,this.label,a)}async emit(e,a){if(M.includes(e)){for(let n of this.listeners[e]||[])n({event:e,id:-1,windowLabel:this.label,payload:a});return Promise.resolve()}return m$1(e,this.label,a)}_handleTauriEvent(e,a){return M.includes(e)?(e in this.listeners?this.listeners[e].push(a):this.listeners[e]=[a],!0):!1}},b=class extends u{async scaleFactor(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"scaleFactor"}}}})}async innerPosition(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"innerPosition"}}}}).then(({x:e,y:a})=>new r(e,a))}async outerPosition(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"outerPosition"}}}}).then(({x:e,y:a})=>new r(e,a))}async innerSize(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"innerSize"}}}}).then(({width:e,height:a})=>new o(e,a))}async outerSize(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"outerSize"}}}}).then(({width:e,height:a})=>new o(e,a))}async isFullscreen(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isFullscreen"}}}})}async isMinimized(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isMinimized"}}}})}async isMaximized(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isMaximized"}}}})}async isFocused(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isFocused"}}}})}async isDecorated(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isDecorated"}}}})}async isResizable(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isResizable"}}}})}async isMaximizable(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isMaximizable"}}}})}async isMinimizable(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isMinimizable"}}}})}async isClosable(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isClosable"}}}})}async isVisible(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"isVisible"}}}})}async title(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"title"}}}})}async theme(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"theme"}}}})}async center(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"center"}}}})}async requestUserAttention(e){let a=null;return e&&(e===1?a={type:"Critical"}:a={type:"Informational"}),a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"requestUserAttention",payload:a}}}})}async setResizable(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setResizable",payload:e}}}})}async setMaximizable(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setMaximizable",payload:e}}}})}async setMinimizable(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setMinimizable",payload:e}}}})}async setClosable(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setClosable",payload:e}}}})}async setTitle(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setTitle",payload:e}}}})}async maximize(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"maximize"}}}})}async unmaximize(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"unmaximize"}}}})}async toggleMaximize(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"toggleMaximize"}}}})}async minimize(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"minimize"}}}})}async unminimize(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"unminimize"}}}})}async show(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"show"}}}})}async hide(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"hide"}}}})}async close(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"close"}}}})}async setDecorations(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setDecorations",payload:e}}}})}async setAlwaysOnTop(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setAlwaysOnTop",payload:e}}}})}async setContentProtected(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setContentProtected",payload:e}}}})}async setSize(e){if(!e||e.type!=="Logical"&&e.type!=="Physical")throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setSize",payload:{type:e.type,data:{width:e.width,height:e.height}}}}}})}async setMinSize(e){if(e&&e.type!=="Logical"&&e.type!=="Physical")throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setMinSize",payload:e?{type:e.type,data:{width:e.width,height:e.height}}:null}}}})}async setMaxSize(e){if(e&&e.type!=="Logical"&&e.type!=="Physical")throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setMaxSize",payload:e?{type:e.type,data:{width:e.width,height:e.height}}:null}}}})}async setPosition(e){if(!e||e.type!=="Logical"&&e.type!=="Physical")throw new Error("the `position` argument must be either a LogicalPosition or a PhysicalPosition instance");return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setPosition",payload:{type:e.type,data:{x:e.x,y:e.y}}}}}})}async setFullscreen(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setFullscreen",payload:e}}}})}async setFocus(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setFocus"}}}})}async setIcon(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setIcon",payload:{icon:typeof e=="string"?e:Array.from(e)}}}}})}async setSkipTaskbar(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setSkipTaskbar",payload:e}}}})}async setCursorGrab(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setCursorGrab",payload:e}}}})}async setCursorVisible(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setCursorVisible",payload:e}}}})}async setCursorIcon(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setCursorIcon",payload:e}}}})}async setCursorPosition(e){if(!e||e.type!=="Logical"&&e.type!=="Physical")throw new Error("the `position` argument must be either a LogicalPosition or a PhysicalPosition instance");return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setCursorPosition",payload:{type:e.type,data:{x:e.x,y:e.y}}}}}})}async setIgnoreCursorEvents(e){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"setIgnoreCursorEvents",payload:e}}}})}async startDragging(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{label:this.label,cmd:{type:"startDragging"}}}})}async onResized(e){return this.listen("tauri://resize",a=>{a.payload=f(a.payload),e(a);})}async onMoved(e){return this.listen("tauri://move",a=>{a.payload=v(a.payload),e(a);})}async onCloseRequested(e){return this.listen("tauri://close-requested",a=>{let n=new y(a);Promise.resolve(e(n)).then(()=>{if(!n.isPreventDefault())return this.close()});})}async onFocusChanged(e){let a=await this.listen("tauri://focus",d=>{e({...d,payload:!0});}),n=await this.listen("tauri://blur",d=>{e({...d,payload:!1});});return ()=>{a(),n();}}async onScaleChanged(e){return this.listen("tauri://scale-change",e)}async onMenuClicked(e){return this.listen("tauri://menu",e)}async onFileDropEvent(e){let a=await this.listen("tauri://file-drop",l=>{e({...l,payload:{type:"drop",paths:l.payload}});}),n=await this.listen("tauri://file-drop-hover",l=>{e({...l,payload:{type:"hover",paths:l.payload}});}),d=await this.listen("tauri://file-drop-cancelled",l=>{e({...l,payload:{type:"cancel"}});});return ()=>{a(),n(),d();}}async onThemeChanged(e){return this.listen("tauri://theme-changed",e)}},y=class{constructor(e){this._preventDefault=!1;this.event=e.event,this.windowLabel=e.windowLabel,this.id=e.id;}preventDefault(){this._preventDefault=!0;}isPreventDefault(){return this._preventDefault}},s=class extends b{constructor(e,a={}){super(e),a?.skip||a$1({__tauriModule:"Window",message:{cmd:"createWebview",data:{options:{label:e,...a}}}}).then(async()=>this.emit("tauri://created")).catch(async n=>this.emit("tauri://error",n));}static getByLabel(e){return h().some(a=>a.label===e)?new s(e,{skip:!0}):null}static async getFocusedWindow(){for(let e of h())if(await e.isFocused())return e;return null}},g;"__TAURI_METADATA__"in window?g=new s(window.__TAURI_METADATA__.__currentWindow.label,{skip:!0}):(console.warn(`Could not find "window.__TAURI_METADATA__". The "appWindow" value will reference the "main" window label.
Note that this is not an issue if running this frontend on a browser instead of a Tauri window.`),g=new s("main",{skip:!0}));function p(t){return t===null?null:{name:t.name,scaleFactor:t.scaleFactor,position:v(t.position),size:f(t.size)}}function v(t){return new r(t.x,t.y)}function f(t){return new o(t.width,t.height)}async function C(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{cmd:{type:"currentMonitor"}}}}).then(p)}async function T(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{cmd:{type:"primaryMonitor"}}}}).then(p)}async function D(){return a$1({__tauriModule:"Window",message:{cmd:"manage",data:{cmd:{type:"availableMonitors"}}}}).then(t=>t.map(p))}

// Update the type of waitForElm to accept a function parameter and a boolean parameter
function waitForElm(selector, debug, once, callback) {
    const observer = new MutationObserver((mutations) => {
        // Loop through the mutations
        mutations.forEach(function (mutation) {
            // Check if any nodes were added
            if (mutation.addedNodes.length > 0) {
                if (debug) {
                    // Loop through the added nodes
                    mutation.addedNodes.forEach(function (node) {
                        // Log the node to the console
                        console.log("[utils.ts] MutationObserver addedNodes", node);
                    });
                }
            }
        });
        // Check if the element exists in the document
        const element = document.querySelector(selector);
        if (element) {
            // Call the callback function with the element and the once parameter
            callback(element, once);
            // Check if the once parameter is true
            if (once) {
                // Stop observing
                observer.disconnect();
            }
        }
    });
    // Start observing
    observer.observe(document.body, {
        childList: true,
        subtree: true,
    });
}
// Update the type of waitForElm to accept a function parameter and a boolean parameter
function waitForElms(selector, debug, once, callback) {
    const observer = new MutationObserver((mutations) => {
        // Loop through the mutations
        mutations.forEach(function (mutation) {
            // Check if any nodes were added
            if (mutation.addedNodes.length > 0) {
                if (debug) {
                    // Loop through the added nodes
                    mutation.addedNodes.forEach(function (node) {
                        // Log the node to the console
                        console.log("[utils.ts] MutationObserver addedNodes", node);
                    });
                }
            }
        });
        // Check if the element exists in the document
        const elements = document.querySelectorAll(selector);
        if (elements) {
            // Call the callback function with the element and the once parameter
            callback(elements, once);
            // Check if the once parameter is true
            if (once) {
                // Stop observing
                observer.disconnect();
            }
        }
    });
    // Start observing
    observer.observe(document.body, {
        childList: true,
        subtree: true,
    });
}

async function scrape_urls() {
    var parent_url = window.location.href;
    console.log("[url_scraper.ts] Element float-scrape-div scrape all the HTMLAnchorElement from page:", parent_url);
    waitForElms("a", true, true, async (elements) => {
        var links = Array();
        console.log("[url_scraper.ts] waitForElms links ", elements);
        elements.forEach((elm) => {
            if (elm instanceof HTMLAnchorElement) {
                var elm_ = elm;
                if (elm_.href && elm_.href.startsWith("http")) {
                    var dataValue = {
                        HTMLAnchorElementValue: { title: elm.title, href: elm.href, inner_text: elm.innerText.replace("\n", ""), scraped_date: 0 }
                    };
                    links.push(dataValue);
                }
            }
        });
        // url网页刮取的网址
        // Create an object literal with the required fields
        let fataEvent = {
            hub: "links hub",
            topic: "URLS_SCRAPED",
            // Optionally, you can also add the label and data fields
            label: "all http HTMLAnchorElement elements",
            data: links
        }; // Cast the object to unknown first, and then to FataEvent<DataValue[]>
        await E().emit("FataEvent", fataEvent);
    });
}

// Import cash-dom
console.log("I am finance-yahoo/scraper.ts");
// add the function as an event listener for the load event
window.addEventListener("DOMContentLoaded", handleLoaded);
// Wait for the window to load
async function handleLoaded() {
    console.log("[scraper.ts] DOMContentLoaded handleLoaded");
    // To use it:
    waitForElm("#float-scrape-div", true, true, async (floatDiv) => {
        console.log("[waitForElm] found Element(float-scrape-div) is ready: ", floatDiv);
        floatDiv.innerHTML = "[finance-yahoo/scraper] float div with scraped web data in json from url=" + window.location.href;
        await scrape_urls();
        // Create an object literal with the required fields
        let fataEvent = {
            hub: "some hub name",
            topic: "some topic name",
            // Optionally, you can also add the label and data fields
            label: "some label",
            data: [{
                    StringValue: { data: "Hello world!", enalbe: true }
                }]
        }; // Cast the object to unknown first, and then to FataEvent<DataValue[]>
        await E().emit("FataEvent", fataEvent);
        // listener has to be registered after emit event to backend!!! or else 
        // [Error] TypeError: listener.handler is not a function. (In 'listener.handler(eventData)', 'listener.handler' is undefined)
        const unlisten = await E().listen("BomaEvent", function (evt) {
            const bomaEvent = evt.payload;
            // Publish event to the given Hub
            if (bomaEvent.label != null) {
                console.log("[finance-yahoo/scraper] listen got BomaEvent@float-scrape-div ", bomaEvent.topic, bomaEvent.label, bomaEvent.data);
            }
            else {
                console.log("[finance-yahoo/scraper] listen got BomaEvent@float-scrape-div ", bomaEvent.topic, bomaEvent.data);
            }
        });
        // Add an event listener for the window.onbeforeunload event
        window.onbeforeunload = function () {
            // Call unlisten() before closing the window
            unlisten();
            // Return null to prevent any confirmation dialog
            return null;
        };
    });
    // To use it: http://fundf10.eastmoney.com/jjjz_002190.html
    waitForElm("#jztable thead", true, false, (thead) => {
        console.log("[extractJjjzHistoryData] thead ready: ", thead);
        var tr_rows = thead.querySelectorAll("tr");
        // // The first child node is the table element, the second child node is the tbody element, and its child nodes are the tr elements
        console.log("[extractJjjzHistoryData] thead tr_rows", tr_rows);
    });
    // To use it: http://fundf10.eastmoney.com/jjjz_002190.html
    waitForElm("#jztable tbody", false, false, (jztable) => {
        console.log("[extractJjjzHistoryData] tbody ready: ", jztable);
        var tr_rows = jztable.querySelectorAll("tr");
        // // The first child node is the table element, the second child node is the tbody element, and its child nodes are the tr elements
        console.log("[extractJjjzHistoryData] tbody tr_rows", tr_rows);
        tr_rows.forEach((tr, trkey, parent) => {
            tr.querySelectorAll("td").forEach((td, tdkey, parent) => {
                console.log("tr[" + trkey + "]" + "]td[" + tdkey + "].text=" + td.innerText);
            });
        });
    });
}
